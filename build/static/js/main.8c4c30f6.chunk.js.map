{"version":3,"sources":["serviceWorker.js","HomeWork2/Header.js","HomeWork2/Home.js","HomeWork2/Doc.js","HomeWork2/Comm.js","router.config.js","HomeWork2/Core.js","HomeWork2/Guide.js","HomeWork2/Api.js","HomeWork2/Hooks.js","HomeWork2/Tuto.js","HomeWork2/Blog.js","HomeWork2/Login.js","HomeWork2/App.js","pages/Mytab.js","pages/MyTaa.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","activeClassName","exact","to","withRouter","props","style","textAlign","onClick","history","push","DocContent","console","log","parmas","routes","component","name","useEffect","localStorage","getItem","pathname","state","float","map","route","i","key","CommText","params","type","path","Home","Doc","pri","setItem","replace","PrivateRoute","Com","rest","render","RouteWithSubRoutes","App","Mytab","selectedTab","hidden","fullScreen","pageText","backgroundColor","height","paddingTop","display","marginTop","marginBottom","color","e","preventDefault","setState","this","position","width","bottom","unselectedTintColor","tintColor","barTintColor","Item","title","icon","background","selectedIcon","selected","badge","onPress","data-seed","fontSize","className","dot","uri","React","Component","MyTaa","top","renderContent","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c4c30f6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Home = (props) => {\r\n    // console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home)","import React, { useEffect } from 'react'\r\nimport { HashRouter as Router, NavLink, Switch, Redirect } from 'react-router-dom'\r\nimport './Doc.css';\r\nimport {RouteWithSubRoutes} from './App'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst DocContent = (props) => {\r\n    console.log(props);\r\n    return <h1>\r\n        {props.match.parmas}\r\n    </h1>\r\n}\r\nconst Doc = ({routes} ) => {\r\n    console.log(routes[0].component.name);\r\n    useEffect((props) => {\r\n        if (!localStorage.getItem('userinfo')) {\r\n            props.history.push({\r\n                pathname: '/Login',\r\n                state: props.location//记录state:props.location的路径，方便之后通过replace返回\r\n            })\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <ol style={{ float: 'right' }}>\r\n                    <li><NavLink to='/doc/core'>核心概念指引</NavLink></li>\r\n                    <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                    <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                    <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n                </ol>\r\n                <Switch>\r\n                    {\r\n                        routes.map((route, i) => (\r\n                            <RouteWithSubRoutes key={i} component={DocContent} {...route} />\r\n                        ))\r\n                    }\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);","import React from 'react';\r\n\r\nimport { HashRouter as Route, NavLink} from 'react-router-dom'\r\n\r\nconst CommText = (props) =>{\r\n    return <h1>\r\n        {props.match.params.type}\r\n    </h1>\r\n}\r\n// getData = (id) =>{\r\n//     useEffect(()=>{\r\n//         props.history.push({\r\n//             pathname:'/comm/:id'\r\n//         })\r\n//     },[])\r\n// }\r\nconst Comm = (props) => {\r\n    console.log(\"Comm:\",props);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Route path=\"/Comm/:type\" component={CommText}/>\r\n                {/* <Redirect from=\"/Comm\" to=\"/Comm/tech\"/>    */}\r\n            </div>\r\n            <ol style={{float:'right'}}>\r\n                <li><NavLink to=\"/Comm/teach\">技术支持</NavLink></li>\r\n                <li><NavLink to=\"/Comm/team\">团队介绍</NavLink></li>\r\n                <li><NavLink to=\"/Comm/cour\">课程</NavLink></li>    \r\n            </ol>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","//路由配置\r\nimport Home from './HomeWork2/Home';\r\nimport Doc from './HomeWork2/Doc';\r\nimport Tuto from './HomeWork2/Tuto';\r\nimport Blog from './HomeWork2/Blog';\r\nimport Comm from './HomeWork2/Comm';\r\nimport Login from './HomeWork2/Login';\r\nimport Core from './HomeWork2/Core';\r\nimport Guide from './HomeWork2/Guide';\r\nimport Api from './HomeWork2/Api';\r\nimport Hooks from './HomeWork2/Hooks'\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,\r\n        routes: [\r\n            {\r\n                path: '/doc/core',\r\n                component: Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '/tuto',\r\n        component: Tuto,\r\n        pri: true\r\n\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/Comm',\r\n        component: Comm\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n            <h1>Core</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Core","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            <h1>guide</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            <h1>api</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            <h1>hooks</h1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n        // console.log(props.location.state)\r\n        // props.history.replace('/')\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login)\r\n","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from './Header';\r\nimport routes from '../router.config';\r\n\r\nexport const PrivateRoute=({ component: Com, ...rest }) =>{\r\n    return (\r\n        <Route\r\n            {...rest} \r\n            render={({ location }) =>\r\n                localStorage.getItem('userinfo')\r\n                    ? <Com {...rest} />\r\n                    : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: location\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport const RouteWithSubRoutes = (props) => {\r\n    console.log(\"内容\",props.routes);\r\n\r\n    if (props.pri) {\r\n        return <PrivateRoute {...props} routes={props.routes}/>\r\n    } else {\r\n        return <Route \r\n            render={()=>{\r\n              return <props.component {...props} routes={props.routes}/>}\r\n            }\r\n        />\r\n    }\r\n}\r\nconst App = () => {\r\n    return <Router>\r\n        <Header />\r\n        <Switch>\r\n            {\r\n                routes.map((route, i) => {\r\n                    return <RouteWithSubRoutes key={i} {...route } />\r\n                })\r\n            }\r\n        </Switch>\r\n    </Router>\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n// import { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\n// import Page from './Page';\r\n// import Home from './Home';\r\n// import Text from './Text';\r\n// import Teach from './Teach';\r\n// import Blog from './Blog';\r\n// import Comm from './Comm';\r\n// import Login from './Login';\r\n// import routes from '../router.config';\r\nimport { Button, TabBar } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTab: this.props.location.pathname,\r\n            hidden: false,\r\n            fullScreen: false,\r\n        };\r\n    }\r\n\r\n    renderContent(pageText) {\r\n        return (\r\n            <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\r\n                <div style={{ paddingTop: 60 }}>Clicked “{pageText}” tab， show “{pageText}” information</div>\r\n                <a style={{ display: 'block', marginTop: 40, marginBottom: 20, color: '#108ee9' }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            hidden: !this.state.hidden,\r\n                            //为真隐藏，为假不隐藏\r\n                        });\r\n                    }}\r\n                >\r\n                    Click to show/hide tab-bar\r\n          </a>\r\n                <a style={{ display: 'block', marginBottom: 600, color: '#108ee9' }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            fullScreen: !this.state.fullScreen,\r\n                        });\r\n                    }}\r\n                >\r\n                    Click to switch fullscreen\r\n          </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {pathname} = this.props.location;\r\n        return (\r\n            <div style={{ position: 'fixed',  width: '100%', bottom: 0 }}>\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"#33A3F4\"\r\n                    barTintColor=\"white\"\r\n                    hidden={this.state.hidden}\r\n                >\r\n                    <TabBar.Item\r\n                        title=\"首页\"\r\n                        key=\"home\"\r\n                        icon={<div style={{\r\n                            width: '22px',\r\n                            height: '22px',\r\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\r\n                        }}\r\n                        />\r\n                        }\r\n                        selectedIcon={<div style={{\r\n                            width: '22px',\r\n                            height: '22px',\r\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\r\n                        }}\r\n                        />\r\n                        }\r\n                        // selected={this.props.match.path === '/home'}\r\n                        selected={pathname === '/home'}\r\n                        //确定状态\r\n                        badge={1}\r\n                        onPress={() => {\r\n                            this.props.history.push('/home')\r\n                        }}\r\n                        data-seed=\"logId\"\r\n                    >\r\n                        {/* {this.renderContent('Life')} */}\r\n              \r\n            </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            //在这里更改图片 <i styly={{}} className=\"iconfont icon-具体名字\"></i>\r\n                            <i style={{color:'red',fontSize:25}} className=\"iconfont icon-my\"></i>\r\n                        }\r\n                        selectedIcon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        title=\"Koubei\"\r\n                        key=\"Koubei\"\r\n                        badge={'new'}\r\n                        selected={pathname === 'text'}\r\n                        onPress={() => {\r\n                            this.props.history.push('/text')\r\n                        }}\r\n                    // data-seed=\"logId1\"\r\n                    >\r\n                        {/* //类组件，所以要加this,函数组件的时候可以不加this */}\r\n                        \r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        selectedIcon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        title=\"Friend\"\r\n                        key=\"Friend\"\r\n                        dot\r\n                        selected={pathname === '/blog'}\r\n                        onPress={() => {\r\n                            this.props.history.push('/blog')\r\n                        }}\r\n                    >\r\n                        \r\n            </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\r\n                        selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\r\n                        title=\"My\"\r\n                        key=\"my\"\r\n                        selected={pathname === '/comm'}\r\n                        onPress={() => {\r\n                            this.props.history.push('/comm')\r\n                        }}\r\n                    >\r\n                        \r\n            </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={<i className=\"iconfont icon-more\"></i>}\r\n                        selectedIcon={<i className=\"iconfont icon-more\"></i>}\r\n                        title=\"Smile\"\r\n                        key=\"my\"\r\n                        selected={pathname === '/teach'}\r\n                        onPress={() => {\r\n                            this.props.history.push('/teach')\r\n                        }}>\r\n                        \r\n            </TabBar.Item>\r\n                </TabBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter (Mytab)","// import { TabBar } from 'antd-mobile';\r\nimport React from 'react';\r\n// import { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\n// import Page from './Page';\r\n// import Home from './Home';\r\n// import Text from './Text';\r\n// import Teach from './Teach';\r\n// import Blog from './Blog';\r\n// import Comm from './Comm';\r\n// import Login from './Login';\r\n// import routes from '../router.config';\r\nimport { Button, TabBar } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { TabBar } from 'antd-mobile';\r\n\r\nclass MyTaa extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTab: 'redTab',\r\n            hidden: false,\r\n            fullScreen: false,\r\n        };\r\n    }\r\n\r\n    renderContent(pageText) {\r\n        return (\r\n            <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\r\n                <div style={{ paddingTop: 60 }}>Clicked “{pageText}” tab， show “{pageText}” information</div>\r\n                <a style={{ display: 'block', marginTop: 40, marginBottom: 20, color: '#108ee9' }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            hidden: !this.state.hidden,\r\n                        });\r\n                    }}\r\n                >\r\n                    Click to show/hide tab-bar\r\n        </a>\r\n                <a style={{ display: 'block', marginBottom: 600, color: '#108ee9' }}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                            fullScreen: !this.state.fullScreen,\r\n                        });\r\n                    }}\r\n                >\r\n                    Click to switch fullscreen\r\n        </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {pathname} = this.props.location;\r\n        return (\r\n            <div style={{ position: 'fixed', height: '100%', width: '100%', top: 0 }}>\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"#33A3F4\"\r\n                    barTintColor=\"white\"\r\n                    hidden={this.state.hidden}\r\n                >\r\n                    <TabBar.Item\r\n                        title=\"Life\"\r\n                        key=\"Life\"\r\n                        icon={<div style={{\r\n                            width: '22px',\r\n                            height: '22px',\r\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\r\n                        }}\r\n                        />\r\n                        }\r\n                        selectedIcon={<div style={{\r\n                            width: '22px',\r\n                            height: '22px',\r\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\r\n                        }}\r\n                        />\r\n                        }\r\n                        selected={pathname === '/home'}\r\n                        //确定状态\r\n                        badge={1}\r\n                        onPress={() => {\r\n                            this.props.history.push('/home')\r\n                        }}\r\n                        data-seed=\"logId\"\r\n                    >\r\n                        {/* {this.renderContent('Life')} */}\r\n              教程\r\n          </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        selectedIcon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        title=\"Koubei\"\r\n                        key=\"Koubei\"\r\n                        badge={'new'}\r\n                        selected={this.state.selectedTab === 'redTab'}\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                selectedTab: 'redTab',\r\n                            });\r\n                        }}\r\n                        data-seed=\"logId1\"\r\n                    >\r\n                        {this.renderContent('Koubei')}\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        selectedIcon={\r\n                            <div style={{\r\n                                width: '22px',\r\n                                height: '22px',\r\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\r\n                            }}\r\n                            />\r\n                        }\r\n                        title=\"Friend\"\r\n                        key=\"Friend\"\r\n                        dot\r\n                        selected={this.state.selectedTab === 'greenTab'}\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                selectedTab: 'greenTab',\r\n                            });\r\n                        }}\r\n                    >\r\n                        {this.renderContent('Friend')}\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\r\n                        selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\r\n                        title=\"My\"\r\n                        key=\"my\"\r\n                        selected={this.state.selectedTab === 'yellowTab'}\r\n                        onPress={() => {\r\n                            this.setState({\r\n                                selectedTab: 'yellowTab',\r\n                            });\r\n                        }}\r\n                    >\r\n                        {this.renderContent('My')}\r\n                    </TabBar.Item>\r\n                </TabBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(MyTaa)","import React, { Component, useState, useEffect } from 'react';\n//useState是在函数组件内用状态，而且下面还可以重新渲染\nimport ReactDOM from 'react-dom';\nimport 'antd-mobile/dist/antd-mobile.css';\nimport * as serviceWorker from './serviceWorker';\n// import App from './taobao/App'\nimport App from './HomeWork2/App'\nimport Acc from './pages/Acc'\n\nReactDOM.render(\n  // <Title title='hook' />,\n  <App />,\n  document.getElementById('root')\n)\n\n/*\n//自测\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vote: 0\n    };\n  }\n  handleClick() {\n    let vote = this.state.vote;\n    vote++;\n    this.setState({\n      vote: vote\n    });\n    console.log(this.props);\n  }\n  render() {\n    return <div>\n      <h1>hello</h1>\n      <button onClick={() => { this.handleClick() }}>点赞{this.state.vote}</button>\n    </div>\n  }\n}\n\n//hook只能在函数组件内用\n// function Counter() {\n//   let [vote, setNum] = useState(0);\n//   //返回的是一个数组,所以进行数组解构，意思是存储当前函数中的数据，vote是当前的状态，setNum是改变状态的方法\n//   function handleClick() {\n//     setNum(vote + 1);\n//   }\n//   return <div>\n//     <h1>hello</h1>\n//     <button onClick={handleClick}>点赞{vote}</button>\n//   </div>\n// }\n\n// class ShowTime extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       time: new Date().toLocaleString()\n//     }\n//   }\n//   //didMount执行一次\n//   componentDidMount() {\n//     this.id = setInterval(() => {\n//       this.setState(\n//         {\n//           time: new Date().toLocaleString()\n//         }\n//       )\n//     }, 1000)\n//   }\n//   //每次更新挂载成功以后\n//   componentDidUpdate() {\n\n//   }\n//   //组件销毁\n//   componentWillUnmount(){\n//     clearInterval(this.id)\n//   }\n//   render() {\n//     return <div>\n//       {this.state.time}\n//     </div>\n//   }\n// }\n\nfunction ShowTime(props){\n  //useState也可以写多个，写在函数的最顶层，不能写在条件语句\n  let [time, setTime] = useState(0);\n  let [topic, setTopic] = useState([]);\n  //useEffect能代替componentDidMount和componentDidUpdate还有componentWillUnmount\n  //useEffect可以代替生命周期的方法，当某个阶段更新成功，创建，销毁的时候，传参传一个函数\n\n  // let page = this.props.match.params.page;//为什么加this不对\n  let page = props.match.params.page;\n  useEffect(()=>{\n    fetch('https://react.docschina.org/page='+page)\n        .then(res=>res.json())\n        .then(res=>{\n          setTopic(res.data);\n          console.log(res);\n        })\n        //当page变的时候切换\n  },[page]);\n  useEffect(() => {\n    let id = setInterval(() => {\n      setTime(time + 1)\n    }, 1000)\n    //在销毁的时候执行一次，就比如当你切换到Counter页面时，不会再打印1\n    return () => {\n      clearInterval(id)\n    }\n  })\n  //有需要的时候可以写多个useEffect\n  return <div>\n    {time}\n    {\n      topic.map((item) => <p>{item.title}</p>)\n    }\n  </div>\n}\n\n*/\n\n\n// import List from './components/List';\n\n// import $ from 'jquery';\n\n// const List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map((item)=><li>{item.title}</li>)\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   const handleClick =(num)=>{\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map((item)=>\n//         <button \n//         key={item}\n//         onClick={()=>handleClick(item)}>{item}</button>)//为啥小括号不能加\n//         //外层是事件调用函数，内层是普通函数\n//         //内层括号里放的是点击对象\n//     }\n//   </div>\n// }\n\n\n// class Home extends React.Component{\n//   // console.log('construct');\n//   constructor(props){\n//     // console.log('construct')\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }  \n//   //   setTimeout(()=>{\n//   //     this.setState({data:[4,5,6,7,8,9]})\n//   //   },500)\n//   // console.log('constructor')\n//   // this.handleClick = this.handleClick.bind(this);\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       console.log(data);\n//       this.setState({data})//data:data???什么原因\n//     })\n//     // console.log('didmount')\n//   }\n//   handleClick=()=>{\n//     console.log('hello');\n//   }\n//   getData =(page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       console.log(data);\n//       this.setState({data})//data:data.data ???什么原因\n//     })\n//   }\n\n//   render(){\n//     // console.log('render')\n\n//     const{data} = this.state;\n//     const btns = [1,2,3,4,5];\n//     return<div>\n//       {/* <Buttons /> */}\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button\n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//           ))\n//       }\n//       <List data={data}/></div>\n//   }\n// }\n\n\n// let ele = <h1 id=\"title\" className='tit'>react<div>{['hello', 'world']}</div></h1>;\n//组件声明\n//函数组件\n//UI组件，木偶组件\n\n// function App(props){\n//   const{title,id} =props;\n//   return<div>\n//     {/* <h1>组件内容</h1>  */}\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// ReactDOM.render(\n//   <App title='abc' id=\"app\"/>,\n//   document.getElementById('root')\n// );\n\n//智能组件\n// class Demo extends React.Component{\n\n//   constructor(){\n//     super();\n//     //声明一个状态\n//     this.state = {\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//     },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title='任意值' id=\"app\"/>\n//       <App title='任意值' id=\"app\"/>\n//       {/* <App title={this.state.name} id=\"app\"/> */}\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// );\n// let ReactDOM = {\n//   //将jsx对象渲染到DOM中\n//   render(eleObj, container) {\n//     //解构\n//     const { type, props } = eleObj;\n//     //创建第一层节点\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点\n//     for (const prop in props) {\n//       // if(prop == 'className'){\n//       //   // ele.setAttribut('class',props[prop]) //写法一\n//       // }\n//       if (prop == 'children') {\n//         if (typeof props.children == 'string') {\n//           const txtNode = document.createTextNode(props.children);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach((child) => {\n//           if (typeof child == 'string') {\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           } else {\n//             ReactDOM.render(child, ele);\n//           }\n//         })\n//       } else {\n//         ele[prop] = props[prop];\n//       }\n//     }\n//     //将第一层节点添加到DOM中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n// let ele = React.createElement(\n//   \"h1\",\n//   {id:\"title\"},\n//   \"hello world\"\n// )\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}